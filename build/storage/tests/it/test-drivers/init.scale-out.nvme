#!/usr/bin/env bash
#
# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

set -e
[ "$DEBUG" == 'true' ] && set -x

current_script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
declare vm_serial
declare nqn
declare storage_target_ip
declare ipu_storage_container_ip
declare port_to_expose
# shellcheck disable=SC1091,SC1090
source "${current_script_dir}"/test-helpers

wait_until_port_on_ip_addr_open "${storage_target_ip}" "${DEFAULT_SPDK_PORT}"
create_and_expose_sybsystem_over_tcp \
	"${storage_target_ip}" "${nqn}" "${port_to_expose}"

ramdrive_size_in_mb=4

echo "Create $NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT disks on storage-target"
ramdrives=()
for ((i=0; i < "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT"; i++))
do
    ramdrives+=("$(create_ramdrive_and_attach_as_ns_to_subsystem \
        "${storage_target_ip}" "Malloc${i}" "${ramdrive_size_in_mb}" \
        "${nqn}")")
done

wait_until_vm_is_up "${vm_serial}"
log_in_with_default_credentials "${vm_serial}"

verify_expected_number_of_nvme_devices "$vm_serial" 0

echo "Create $NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT NVMe devices"
nvme_virtual_id=0
nvme_devices=()
for ((i=0; i < "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT"; i++))
do
    nvme_devices+=("$(create_nvme_device "$ipu_storage_container_ip" \
        "${i}" "$nvme_virtual_id")")
done
verify_expected_number_of_nvme_devices "$vm_serial" 64


echo "Attach $NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT namespaces to"
echo "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT nvme devices"
verify_expected_number_of_nvme_namespaces "$vm_serial" 0
for ((i=0; i < "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT"; i++))
do
    attach_volume "$ipu_storage_container_ip" "${nvme_devices[$i]}" \
        "${ramdrives[$i]}" "$nqn" "$storage_target_ip"
done
verify_expected_number_of_nvme_namespaces "$vm_serial" \
    "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT"

echo "Delete all created nvme namespaces"
for ((i=0; i < "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT"; i++))
do
    detach_volume "$ipu_storage_container_ip" "${nvme_devices[$i]}" "${ramdrives[$i]}"
done
verify_expected_number_of_nvme_namespaces "$vm_serial" 0



echo "============================================================"
echo "Attach $MAX_NUMBER_OF_NAMESPACES namespaces to single device"
nvme_device="${nvme_devices[0]}"
for ((i=0; i < "$MAX_NUMBER_OF_NAMESPACES"; i++))
do
    attach_volume "$ipu_storage_container_ip" "$nvme_device" \
        "${ramdrives[$i]}" "$nqn" "$storage_target_ip"
done
verify_expected_number_of_nvme_namespaces "${vm_serial}" "$MAX_NUMBER_OF_NAMESPACES"

echo "Detach all nvme namespaces attached to single device"
for ((i=0; i < "$MAX_NUMBER_OF_NAMESPACES"; i++))
do
    detach_volume "$ipu_storage_container_ip" "$nvme_device" "${ramdrives[$i]}"
done
verify_expected_number_of_nvme_namespaces "${vm_serial}" 0

echo "Delete all created nvme devices"
for ((i=0; i < "$NUMBER_OF_DEVICES_TO_ATTACH_IN_SCALE_OUT"; i++))
do
    delete_nvme_device "$ipu_storage_container_ip" "${nvme_devices[$i]}"
done
verify_expected_number_of_nvme_devices "${vm_serial}" 0
