#!/usr/bin/env bash
#
# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

set -e
[ "$DEBUG" == 'true' ] && set -x

current_script_dir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
declare vm_serial
declare nqn
declare storage_target_ip
declare ipu_storage_container_ip
declare port_to_expose
declare traffic_generator_ip
# shellcheck disable=SC1091,SC1090
source "${current_script_dir}"/test-helpers

wait_until_port_on_ip_addr_open "$storage_target_ip" "$DEFAULT_SPDK_PORT"
create_and_expose_sybsystem_over_tcp \
	"$storage_target_ip" "$nqn" "$port_to_expose"

wait_until_vm_is_up "$vm_serial"

log_in_with_default_credentials "$vm_serial"

wait_until_host_target_is_up "$vm_serial"

ramdrive_size_in_mb=16
fio_args="{\"rw\":\"randrw\", \"direct\":1, \"bs\":\"4k\", \
    \"iodepth\":256, \"ioengine\":\"libaio\", \"runtime\":2, \
    \"name\":\"iops_test-job\", \"time_based\": 1, \"numjobs\": 4}"
malloc0=$(create_ramdrive_and_attach_as_ns_to_subsystem \
    "$storage_target_ip" "Malloc0" \
    "$ramdrive_size_in_mb" "$nqn")

malloc1=$(create_ramdrive_and_attach_as_ns_to_subsystem \
    "$storage_target_ip" "Malloc1" \
    "$ramdrive_size_in_mb" "$nqn")

physical_id=0
echo "Cretae NVME device with attached namespaces"
nvme=$(create_nvme_device "$ipu_storage_container_ip" \
        "$physical_id" "0")
attach_volume "$ipu_storage_container_ip" "$nvme" "$malloc0" "$nqn" \
    "$storage_target_ip"

attach_volume "$ipu_storage_container_ip" "$nvme" "$malloc1" "$nqn" \
    "$storage_target_ip"

echo "Run fio over all namespaces of ${nvme}"
out=$(send_fio_cmd "$traffic_generator_ip" "$HOST_TARGET_SERVICE_PORT" \
                "$nvme" "$fio_args")
echo -e "$out"
echo "$out" | grep "Disk stats (read/write)"
echo "$out" | grep "nvme0n1"
echo "$out" | grep "nvme0n2"

echo "Run fio only over $malloc0 of $nvme"
out=$(send_fio_cmd "$traffic_generator_ip" "$HOST_TARGET_SERVICE_PORT" \
                "$nvme" "$fio_args" "$malloc0")
echo -e "$out"
echo "$out" | grep "Disk stats (read/write)"
echo "$out" | grep "nvme0n1"
echo "$out" | grep -v "nvme0n2"

echo "Run fio only over $malloc1 of $nvme"
out=$(send_fio_cmd "$traffic_generator_ip" "$HOST_TARGET_SERVICE_PORT" \
                "$nvme" "$fio_args" "$malloc1")
echo -e "$out"
echo "$out" | grep "Disk stats (read/write)"
echo "$out" | grep -v "nvme0n1"
echo "$out" | grep "nvme0n2"

echo "fio has been executed successfully!"

echo "Detach all namespaces from nvme device"
detach_volume "$ipu_storage_container_ip" "$nvme" "$malloc0"
detach_volume "$ipu_storage_container_ip" "$nvme" "$malloc1"
echo "Delete nvme device"
delete_nvme_device "$ipu_storage_container_ip" "$nvme"

exit 0
